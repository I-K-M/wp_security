#!/bin/bash

set -euo pipefail
IFS=$'\n\t'

LOGFILE="./scan-result.log"
exec >> "$LOGFILE" 2>&1

# functions
color() { local c="$1"; shift; echo -e "\e[${c}m$*\e[0m"; }
warn() { color 31 "ALERT: $*"; }
ok()   { color 32 "$*"; }

PATTERNS=(
  "eval("
  "base64_decode("
  "gzinflate("
  "gzuncompress("
  "str_rot13("
  "shell_exec("
  "exec("
  "passthru("
  "system("
  "assert("
  "preg_replace("
  "create_function("
  "file_put_contents("
  "curl_exec("
  "popen("
  "proc_open("
  "fopen("
  "php_uname("
)

SCAN_DIRS=(
  "wp-content/cache"
  "wp-content/uploads"
  "wp-content/plugins"
  "wp-content/themes"
  "wp-content/mu-plugins"
  "wp-includes"
  "."
)

echo '=== 🔍 wp full scan (improved) ==='
for dir in "${SCAN_DIRS[@]}"; do
  [[ ! -d "$dir" && ! -f "$dir" ]] && continue
  echo "--- 📁 Scan: $dir ---"
  for pat in "${PATTERNS[@]}"; do
    matches=$(grep -r --include='*.php' -n "$pat" "$dir" 2>/dev/null || true)
    if [[ -n "$matches" ]]; then
      warn "$dir : $pat detected !"
      echo "$matches"
    else
      ok "$dir : $pat → nothing"
    fi
  done
done

echo ""
echo "--- 🧠 db scan ---"
DB_NAME='dbname'
DB_USER='user'
DB_PASS='password'
DB_HOST='localhost'

SQL_TEMP=$(mktemp)
cat <<'EOF' > "$SQL_TEMP"
SELECT 'wp_options' AS context, option_name, option_value FROM wp_options WHERE option_value LIKE '%base64%';
SELECT 'wp_posts' AS context, post_title, post_content FROM wp_posts WHERE post_content LIKE '%<script%';
SELECT 'wp_options (cron)' AS context, option_name, option_value FROM wp_options WHERE option_name = 'cron';
SELECT 'transients eval' AS context, option_name, option_value FROM wp_options WHERE option_name LIKE '_transient%' AND option_value LIKE '%eval%';
SELECT 'transients (dangerous)' AS context, option_name, option_value FROM wp_options WHERE option_name LIKE '_transient%' AND (option_value LIKE '%base64%' OR option_value LIKE '%gzinflate%' OR option_value LIKE '%gzuncompress%' OR option_value LIKE '%str_rot13%' OR option_value LIKE '%eval%' OR option_value LIKE '%preg_replace%' OR option_value LIKE '%shell_exec%' OR option_value LIKE '%assert(%');
SELECT 'wp_options (autoload size)' AS context, option_name, LENGTH(option_value) AS size FROM wp_options WHERE autoload = 'yes' ORDER BY size DESC LIMIT 50;
SELECT 'wp_users' AS context, ID, user_login, user_email, user_registered, user_status, display_name FROM wp_users;
SELECT 'wp_usermeta (capabilities)' AS context, user_id, meta_key, meta_value FROM wp_usermeta WHERE meta_key LIKE '%capabilities%';
EOF

mysql -u "$DB_USER" -p"$DB_PASS" -h "$DB_HOST" "$DB_NAME" < "$SQL_TEMP" | tee -a "$LOGFILE"
rm "$SQL_TEMP"

echo ""
ok "✅ scan completed: see results in $LOGFILE"
